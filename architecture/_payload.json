[{"data":1,"prerenderedAt":358},["ShallowReactive",2],{"navigation":3,"/architecture":38},[4,19],{"title":5,"path":6,"stem":7,"children":8},"Getting Started","/getting-started","1.getting-started/1.index",[9,11,15],{"title":10,"path":6,"stem":7},"Introduction",{"title":12,"path":13,"stem":14},"Installation","/getting-started/installation","1.getting-started/2.installation",{"title":16,"path":17,"stem":18},"Usage","/getting-started/usage","1.getting-started/3.usage",{"title":20,"path":21,"stem":22,"children":23},"Architecture","/architecture","2.architecture/1.index",[24,26,30,34],{"title":25,"path":21,"stem":22},"Overview",{"title":27,"path":28,"stem":29},"Repository","/architecture/repository","2.architecture/2.repository",{"title":31,"path":32,"stem":33},"Scrapers","/architecture/scrapers","2.architecture/3.scrapers",{"title":35,"path":36,"stem":37},"Formater","/architecture/formater","2.architecture/4.formater",{"page":39,"surround":353},{"id":40,"title":25,"body":41,"description":347,"extension":348,"links":349,"meta":350,"navigation":351,"path":21,"seo":352,"stem":22},"docs/2.architecture/1.index.md",{"type":42,"value":43,"toc":337},"minimal",[44,62,67,70,75,80,83,133,137,155,159,193,197,240,244,265,269,307,311],[45,46,47,56],"p",{},[48,49],"img",{"alt":50,"className":51,"src":54,"block":55},"architecture",[52,53],"w-full","dark:hidden","/assets/architecture-light.png","",[48,57],{"alt":50,"className":58,"src":61},[52,59,60],"hidden","dark:block","/assets/architecture-dark.png",[63,64,66],"h2",{"id":65},"architecture-overview","Architecture Overview",[45,68,69],{},"Currencia follows a distributed architecture pattern designed for real-time cryptocurrency data processing and delivery, built entirely with the Vue/Nuxt ecosystem.",[71,72,74],"h3",{"id":73},"system-components","System Components",[76,77,79],"h4",{"id":78},"_1-data-providers","1. Data Providers",[45,81,82],{},"The system collects data from multiple sources through different methods:",[84,85,86,107,120],"ul",{},[87,88,89,93],"li",{},[90,91,92],"strong",{},"Web Scrapers",[84,94,95,101],{},[87,96,97,100],{},[90,98,99],{},"CoinMarketCap Scraper",": Extracts market data from CoinMarketCap",[87,102,103,106],{},[90,104,105],{},"CryptoCompare Scraper",": Collects additional market data from CryptoCompare",[87,108,109,112],{},[90,110,111],{},"API Integration",[84,113,114],{},[87,115,116,119],{},[90,117,118],{},"Kraken API",": Direct API integration for trading data",[87,121,122,125],{},[90,123,124],{},"AI Services",[84,126,127],{},[87,128,129,132],{},[90,130,131],{},"Sentiment Analysis",": Cloud-based AI service running on Azure VPS for market sentiment processing",[76,134,136],{"id":135},"_2-message-queue","2. Message Queue",[84,138,139],{},[87,140,141,144],{},[90,142,143],{},"RabbitMQ",[84,145,146,149,152],{},[87,147,148],{},"Handles asynchronous communication between components",[87,150,151],{},"Ensures reliable message delivery",[87,153,154],{},"Manages data flow from providers to formatter",[76,156,158],{"id":157},"_3-data-storage","3. Data Storage",[84,160,161,177],{},[87,162,163,166],{},[90,164,165],{},"Temporary Storage (MongoDB)",[84,167,168,171,174],{},[87,169,170],{},"Stores unformatted raw data",[87,172,173],{},"Enables quick access to recent market data",[87,175,176],{},"Acts as a buffer between data providers and formatter",[87,178,179,182],{},[90,180,181],{},"Permanent Storage (PostgreSQL)",[84,183,184,187,190],{},[87,185,186],{},"Stores processed and formatted data",[87,188,189],{},"Maintains user information and preferences",[87,191,192],{},"Handles relationships between entities",[76,194,196],{"id":195},"_4-application-stack-nuxt-full-stack","4. Application Stack (Nuxt Full Stack)",[84,198,199,218],{},[87,200,201,204],{},[90,202,203],{},"Frontend (Nuxt 3)",[84,205,206,209,212,215],{},[87,207,208],{},"Vue-based framework for the user interface",[87,210,211],{},"Server-Side Rendering (SSR) capabilities",[87,213,214],{},"Built-in state management",[87,216,217],{},"Full TypeScript",[87,219,220,223],{},[90,221,222],{},"Backend (Nitro Server)",[84,224,225,228,231,234,237],{},[87,226,227],{},"Powers both the formatter service and application backend",[87,229,230],{},"Handles API routes and server middleware",[87,232,233],{},"Processes and standardizes data from different sources",[87,235,236],{},"Manages database interactions",[87,238,239],{},"Provides high-performance server capabilities",[71,241,243],{"id":242},"data-flow","Data Flow",[245,246,247,250,253,256,259,262],"ol",{},[87,248,249],{},"Data providers continuously send cryptocurrency information",[87,251,252],{},"RabbitMQ queues incoming data for processing",[87,254,255],{},"Raw data is temporarily stored in MongoDB",[87,257,258],{},"Nitro Server processes and standardizes the information",[87,260,261],{},"Formatted data is stored in PostgreSQL",[87,263,264],{},"Nuxt application retrieves and displays data to users",[71,266,268],{"id":267},"key-technical-features","Key Technical Features",[84,270,271,277,283,289,295,301],{},[87,272,273,276],{},[90,274,275],{},"Unified Server Engine",": Nitro powers both the formatter and application backend",[87,278,279,282],{},[90,280,281],{},"Full-Stack TypeScript",": End-to-end type safety",[87,284,285,288],{},[90,286,287],{},"Server-Side Rendering",": Improved performance and SEO",[87,290,291,294],{},[90,292,293],{},"Real-time Updates",": Reactive data processing and display",[87,296,297,300],{},[90,298,299],{},"Scalable Architecture",": Distributed components for better performance",[87,302,303,306],{},[90,304,305],{},"Data Consistency",": Standardized formatting across all sources",[71,308,310],{"id":309},"development-benefits","Development Benefits",[84,312,313,319,325,331],{},[87,314,315,318],{},[90,316,317],{},"Unified Development Experience",": Same technology stack across services",[87,320,321,324],{},[90,322,323],{},"Simplified Deployment",": Nitro's unified server approach",[87,326,327,330],{},[90,328,329],{},"Strong TypeScript Integration",": Better development experience and type safety",[87,332,333,336],{},[90,334,335],{},"Vue/Nuxt Ecosystem",": Rich set of tools and plugins available",{"title":55,"searchDepth":338,"depth":338,"links":339},2,[340],{"id":65,"depth":338,"text":66,"children":341},[342,344,345,346],{"id":73,"depth":343,"text":74},3,{"id":242,"depth":343,"text":243},{"id":267,"depth":343,"text":268},{"id":309,"depth":343,"text":310},"This section offers a schematic overview of the project's architecture, highlighting core components, data flow, and key integrations.","md",null,{},true,{"title":25,"description":347},[354,356],{"title":16,"path":17,"stem":18,"description":355,"children":-1},"Learn how to use Currencia",{"title":27,"path":28,"stem":29,"description":357,"children":-1},"Overview of the repository's organization, detailing its structure to facilitate efficient development and deployment processes.",1739470890617]